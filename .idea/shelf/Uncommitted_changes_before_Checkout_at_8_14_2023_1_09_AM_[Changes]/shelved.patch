Index: app/src/main/java/com/example/loginandregister/AdminScheduleFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/loginandregister/AdminScheduleFragment.java b/app/src/main/java/com/example/loginandregister/AdminScheduleFragment.java
--- a/app/src/main/java/com/example/loginandregister/AdminScheduleFragment.java	
+++ b/app/src/main/java/com/example/loginandregister/AdminScheduleFragment.java	
@@ -147,6 +147,7 @@
             }
         });
 
+
         return view;
     }
 
@@ -154,36 +155,47 @@
         isEditMode = !isEditMode;
 
         if (isEditMode) {
-            // Check if the selected date is today or a future date
-            if (!selectedDate.isBefore(LocalDate.now())) {
-                // Enter edit mode
-                timeTextView.setEnabled(true);
-                timeTextView.requestFocus();
+            // Enter edit mode
+            timeTextView.setEnabled(true);
+            timeTextView.requestFocus();
 
-                // Show the keyboard when entering edit mode
-                InputMethodManager imm = (InputMethodManager) requireContext().getSystemService(Context.INPUT_METHOD_SERVICE);
-                imm.showSoftInput(timeTextView, InputMethodManager.SHOW_IMPLICIT);
-                editTimeImageView.setImageResource(R.drawable.ic_check); // Change to check icon
-            } else {
-                // If the selected date is in the past, show a message and disable editing
-                Toast.makeText(getActivity(), "Cannot edit past dates", Toast.LENGTH_SHORT).show();
-            }
+            // Show the keyboard when entering edit mode
+            InputMethodManager imm = (InputMethodManager) requireContext().getSystemService(Context.INPUT_METHOD_SERVICE);
+            imm.showSoftInput(timeTextView, InputMethodManager.SHOW_IMPLICIT);
+
+            editTimeImageView.setImageResource(R.drawable.ic_check); // Change to check icon
         } else {
             // Exit edit mode
             timeTextView.setEnabled(false);
-            editTimeImageView.setImageResource(R.drawable.ic_edit); // Change back to edit icon
+
             if (!timeTextView.getText().toString().isEmpty()) {
                 dayTimeMap.put(selectedDate, timeTextView.getText().toString());
             }
+
+            if (timeTextView.isEnabled()) {
+                // Get the selected day from the dayTextView
+                int selectedDay = Integer.parseInt(dayTextView.getText().toString());
+
+                // Update the selected date's day with the selected day
+                selectedDate = selectedDate.withDayOfMonth(selectedDay);
+
+                // Save the edited time for the selected day
+                String editedTime = timeTextView.getText().toString();
+                dayTimeMap.put(selectedDate, editedTime);
+            }
+
+            editTimeImageView.setImageResource(R.drawable.ic_edit); // Change back to edit icon
         }
     }
+
+
+
 
     private void initWidgets(View view) {
         calendarRecyclerView = view.findViewById(R.id.calendarRecycleView);
         monthYearText = view.findViewById(R.id.monthYearTV);
         timeTextView = view.findViewById(R.id.time);
     }
-
     private void setMonthView() {
         monthYearText.setText(monthYearFromDate((selectedDate)));
         ArrayList<String> daysInMonth = daysInMonthArray(selectedDate);
@@ -232,6 +244,9 @@
         return daysInMonthArray;
     }
 
+
+
+
     public void previousMonth(View view) {
         selectedDate = selectedDate.minusMonths(1);
         setMonthView();
@@ -249,20 +264,25 @@
             selectedDate = selectedDate.withDayOfMonth(clickedDay); // Update the selected date
 
             String formattedDate = formatDateForDisplay(selectedDate);
+
             dayTextView.setText(formattedDate);
 
-            String message = "Selected Date: " + formattedDate;
+            String message = "Selected Date: " + formattedDate; // Day, Month date
             Toast.makeText(getActivity(), message, Toast.LENGTH_SHORT).show();
 
             String savedTime = dayTimeMap.get(selectedDate);
             timeTextView.setText(savedTime);
-            timeTextView.setEnabled(false); // Disable the timeTextView for previous dates
+            timeTextView.setEnabled(true); // Enable the timeTextView when there's a saved time
 
             // Set the edit mode based on whether there's a saved time
             isEditMode = savedTime != null;
             editTimeImageView.setImageResource(isEditMode ? R.drawable.ic_check : R.drawable.ic_edit);
+            timeTextView.setEnabled(isEditMode);
         }
     }
+
+
+
 
     private void updateDayTextView() {
         String currentDate = formatDateForDisplay(LocalDate.now());
